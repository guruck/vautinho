# CA ROOT
vault secrets enable pki
vault secrets tune -max-lease-ttl=87600h pki

# vault write -field=certificate pki/root/generate/internal common_name="localhost" issuer_name="root-2023" ttl=87600h > root_2023_ca.crt

vault write -format=json pki/root/generate/internal common_name="vault-ca-root-pki" | tee >(jq -r .data.certificate > vault-ca-root-pki.pem) >(jq -r .data.issuing_ca > vault-ca-root-pki-issuing.pem) >(jq -r .data.private_key > vault-ca-root-pki-key.pem)

vault write pki/config/urls issuing_certificates="https://127.0.0.1:8200/v1/pki/ca" crl_distribution_points="https://127.0.0.1:8200/v1/pki/crl"

# CA INTERMEDIATE
vault secrets enable -path=pki_int pki
vault secrets tune -max-lease-ttl=43800h pki_int

vault write -format=json pki_int/intermediate/generate/internal common_name="vault-ca-root-pki Intermediate Authority" | jq -r '.data.csr' > vault-ca-root-pki-int.csr
vault write -format=json pki/root/sign-intermediate csr=@vault-ca-root-pki-int.csr common_name="vault-ca-root-pki-int" format=pem_bundle ttl="43800h" | jq -r '.data.certificate' > vault-ca-root-pki-int.pem
vault write pki_int/intermediate/set-signed certificate=@vault-ca-root-pki-int.pem
vault write pki/config/urls issuing_certificates="https://127.0.0.1:8200/v1/pki/ca" crl_distribution_points="https://127.0.0.1:8200/v1/pki/crl"

vault write pki_int/roles/localhost issuer_ref="$(vault read -field=default pki_int/config/issuers)" allowed_domains="localhost" allow_subdomains=true max_ttl="720h"
vault read -field=default pki_int/config/issuers

vault write pki_int/issue/localhost common_name="localhost" ttl="24h"

------------------------------------------------
------------------------------------------------

# CA ROOT
vault secrets enable pki
vault secrets tune -max-lease-ttl=87600h pki

vault write -field=certificate pki/root/generate/internal common_name="localhost" issuer_name="root-2023" ttl=87600h > root_2023_ca.crt

vault list pki/issuers/
# 8d285d26-4af8-ddf0-9019-2db86918425e

vault read pki/issuer/8d285d26-4af8-ddf0-9019-2db86918425e | tail -n 6
vault read pki/issuer/$(vault list -format=json pki/issuers/ | jq -r '.[]') | tail -n 6
vault write pki/roles/2023-servers allow_any_name=true

vault write pki/config/urls issuing_certificates="http://127.0.0.1:8200/v1/pki/ca" crl_distribution_points="http://127.0.0.1:8200/v1/pki/crl"

# CA INTERMEDIATE
vault secrets enable -path=pki_int pki
vault secrets tune -max-lease-ttl=43800h pki_int

vault write -format=json pki_int/intermediate/generate/internal common_name="localhost Intermediate Authority" issuer_name="localhost-intermediate" | jq -r '.data.csr' > pki_intermediate.csr

vault write -format=json pki/root/sign-intermediate issuer_ref="root-2023" csr=@pki_intermediate.csr format=pem_bundle ttl="43800h" | jq -r '.data.certificate' > intermediate.cert.pem

vault write pki_int/intermediate/set-signed certificate=@intermediate.cert.pem

vault write pki_int/roles/localhost issuer_ref="localhost-intermediate" allowed_domains="localhost" allow_subdomains=true max_ttl="720h"

# esse comando mostra o intermediario default para assinar os certificados
vault read -field=default pki_int/config/issuers 

# esse comando registra um certificado
vault write pki_int/issue/localhost common_name="teste.localhost" ttl="24h"

# esse comando revoga um certificado
vault write pki_int/revoke serial_number=<serial_number>

# esse comando remove expired certificates
vault write pki_int/tidy tidy_cert_store=true tidy_revoked_certs=true

# esse comando rotate root CA
vault write pki/root/rotate/internal common_name="localhost" issuer_name="root-2024"
vault write pki/roles/2026-servers allow_any_name=true issuer_ref="root-2024"

# esse comando exibe os roots CA
vault list pki/issuers

# Create a role for the new localhost root CA; 
vault write pki/roles/2024-servers allow_any_name=true